---
kind: ObjectType
version: v1
definition:
  name: TheatersLocationAddress
  fields:
    - name: city
      type: String
    - name: state
      type: String
    - name: street1
      type: String
    - name: street2
      type: String
    - name: zipcode
      type: String
  graphql:
    typeName: MySubgraph_TheatersLocationAddress
    inputTypeName: MySubgraph_TheatersLocationAddressInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_mongo
      dataConnectorObjectType: theaters_location_address

---
kind: TypePermissions
version: v1
definition:
  typeName: TheatersLocationAddress
  permissions:
    - role: admin
      output:
        allowedFields:
          - city
          - state
          - street1
          - street2
          - zipcode

---
kind: ObjectType
version: v1
definition:
  name: TheatersLocationGeo
  fields:
    - name: coordinates
      type: "[Double!]"
    - name: type
      type: String
  graphql:
    typeName: MySubgraph_TheatersLocationGeo
    inputTypeName: MySubgraph_TheatersLocationGeoInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_mongo
      dataConnectorObjectType: theaters_location_geo

---
kind: TypePermissions
version: v1
definition:
  typeName: TheatersLocationGeo
  permissions:
    - role: admin
      output:
        allowedFields:
          - coordinates
          - type

---
kind: ObjectType
version: v1
definition:
  name: TheatersLocation
  fields:
    - name: address
      type: TheatersLocationAddress
    - name: geo
      type: TheatersLocationGeo
  graphql:
    typeName: MySubgraph_TheatersLocation
    inputTypeName: MySubgraph_TheatersLocationInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_mongo
      dataConnectorObjectType: theaters_location

---
kind: TypePermissions
version: v1
definition:
  typeName: TheatersLocation
  permissions:
    - role: admin
      output:
        allowedFields:
          - address
          - geo

---
kind: ObjectType
version: v1
definition:
  name: Theaters
  fields:
    - name: id
      type: ObjectId!
    - name: location
      type: TheatersLocation
    - name: theaterId
      type: Int
  graphql:
    typeName: MySubgraph_Theaters
    inputTypeName: MySubgraph_TheatersInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_mongo
      dataConnectorObjectType: theaters
      fieldMapping:
        id:
          column:
            name: _id
        location:
          column:
            name: location
        theaterId:
          column:
            name: theaterId

---
kind: TypePermissions
version: v1
definition:
  typeName: Theaters
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - location
          - theaterId

---
kind: ObjectBooleanExpressionType
version: v1
definition:
  name: TheatersBoolExp
  objectType: Theaters
  dataConnectorName: my_mongo
  dataConnectorObjectType: theaters
  comparableFields:
    - fieldName: id
      operators:
        enableAll: true
    - fieldName: location
      operators:
        enableAll: true
    - fieldName: theaterId
      operators:
        enableAll: true
  graphql:
    typeName: MySubgraph_TheatersBoolExp

---
kind: Model
version: v1
definition:
  name: Theaters
  objectType: Theaters
  source:
    dataConnectorName: my_mongo
    collection: theaters
  filterExpressionType: TheatersBoolExp
  orderableFields:
    - fieldName: id
      orderByDirections:
        enableAll: true
    - fieldName: location
      orderByDirections:
        enableAll: true
    - fieldName: theaterId
      orderByDirections:
        enableAll: true
  graphql:
    selectMany:
      queryRootField: mySubgraph_theaters
    selectUniques:
      - queryRootField: mySubgraph_theatersById
        uniqueIdentifier:
          - id
    orderByExpressionType: MySubgraph_TheatersOrderBy

---
kind: ModelPermissions
version: v1
definition:
  modelName: Theaters
  permissions:
    - role: admin
      select:
        filter: null

